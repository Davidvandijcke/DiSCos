expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, graph=FALSE, seed=1))
# graph TRUE
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, graph=TRUE, seed=1))
# graph FALSE
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, graph=FALSE, seed=1))
disco$perm
# graph TRUE
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, graph=TRUE, seed=1))
# qmethod = "smooth"
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, qmethod="smooth", seed=1, CI=TRUE, num.cores=2, boot=2))
# qmethod = "qkden"
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, qmethod="qkden", seed=1, CI=TRUE, num.cores=2, boot=2))
devtools::load_all()
# qmethod = "qkden"
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, qmethod="qkden", seed=1, CI=TRUE, num.cores=2, boot=2))
# qmethod = "qkden"
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, qmethod="qkden", seed=1, num.cores=2))
# qmethod = "extreme"
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, qmethod="extreme", seed=1, num.cores=2))
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, num.cores=2))
expect_no_error(disco2 <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, num.cores=2))
expect_equal(disco$Weights_DiSCo_avg, disco$Weights_DiSCo_avg)
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, num.cores=2, simplex=TRUE))
expect_true(all(disco$Weights_DiSCo_avg >= 0))
disco$Weights_DiSCo_avg
# test simplex=TRUE
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, num.cores=2, simplex=FALSE))
disco$Weights_DiSCo_avg
# expect true up to some margin of error
expect_true(all(disco$Weights_DiSCo_avg > -1e-10))
# test simplex=TRUE
expect_no_error(disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, num.cores=2, simplex=TRUE))
# expect true up to some margin of error
expect_true(all(disco$Weights_DiSCo_avg > -1e-10))
?DiSCoTEA
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1)
expect_no_error(discot <- DiSCoTEA(disco, agg="quantile"))
discot$plot
type(discot$plot)
typeof(discot$plot)
expect_true(typeof(discot$plot) == "list")
summary(discot)
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1)
expect_no_error(discot <- DiSCoTEA(disco, agg="cdf"))
expect_true(typeof(discot$plot) == "list")
expect_no_error(summary(discot))
discot$treats
discot$ci_lower
discot$ci_upper
expect_true(!is.null(discot$treats))
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1,  CI=TRUE, boots=2)
expect_no_error(discot <- DiSCoTEA(disco, agg="quantileDiff"))
expect_true(typeof(discot$plot) == "list")
expect_no_error(summary(discot))
expect_true(!is.null(discot$treats))
expect_true(!is.null(discot$ses))
expect_true(!is.null(discot$ci_lower))
expect_true(!is.null(discot$ci_upper))
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
expect_no_error(discot <- DiSCoTEA(disco, agg="quantileDiff"))
expect_true(typeof(discot$plot) == "list")
expect_no_error(summary(discot))
expect_true(!is.null(discot$treats))
expect_true(!is.null(discot$ses))
expect_true(!is.null(discot$ci_lower))
expect_true(!is.null(discot$ci_upper))
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
expect_no_error(discot <- DiSCoTEA(disco, samples=c(0.1, 0.2, 0.5, 0.9)))
discot$agg_df
smpls <- c(0.1, 0.2, 0.5, 0.9)
expect_equal(discot$agg_df$X_from, c(0, smpls))
expect_equal(discot$agg_df$X_to, c(smpls, 1))
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
smpls <- c()
expect_error(discot <- DiSCoTEA(disco, samples=smpls))
summary(discot)
smpls <- c(-100, 0.5, 100)
expect_error(discot <- DiSCoTEA(disco, samples=smpls))
summary(discot)
discot <- DiSCoTEA(disco, samples=smpls)
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
smpls <- c(0.5, 100)
expect_error(discot <- DiSCoTEA(disco, samples=smpls))
summary(discot)
discot <- DiSCoTEA(disco, samples=smpls)
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
smpls <- c(0.5, 100)
expect_error(discot <- DiSCoTEA(disco, samples=smpls))
library(testthat)
library(DiSCo)
test_check("DiSCo")
devtools::check()
?devtools::check
devtools::check(vignettes=FALSE)
devtools::check(vignettes=FALSE)
pkgdown::build_site()
devtools::check(vignettes=FALSE)
devtools::build()
devtools::test()
devtools::build(vignettes=FALSE)
devtools::check(vignettes=FALSE)
devtools::build(vignette=FALSE)
rhub::check_for_cran()
devtools::document()
rhub::check_for_cran()
?check_for_cran
devtools::load_all()
library(rhub)
?check_for_cran
?test
devtools::document()
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
smpls <- c(0.1, 0.2, 0.5, 0.9)
expect_no_error(discot <- DiSCoTEA(disco, samples=smpls))
expect_equal(discot$agg_df$X_from, c(0, smpls))
expect_equal(discot$agg_df$X_to, c(smpls, 1))
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
smpls <- c(0.5, 100)
expect_error(discot <- DiSCoTEA(disco, samples=smpls))
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
smpls <- c(0.5, 100)
discot <- DiSCoTEA(disco, samples=smpls)
?test
?check
rhub::check()
devtools::check()
devtools::test()
devtools::load_all()
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
expect_no_error(discot <- DiSCoTEA(disco, agg="quantile"))
expect_true(typeof(discot$plot) == "list")
expect_no_error(summary(discot))
expect_true(!is.null(discot$treats))
expect_true(!is.null(discot$ses))
expect_true(!is.null(discot$ci_lower))
expect_true(!is.null(discot$ci_upper))
Ts <- 2
t0 <- 2
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1, CI=TRUE, boots=2)
smpls <- c(0.1, 0.2, 0.5, 0.9)
expect_no_error(discot <- DiSCoTEA(disco, samples=smpls))
expect_equal(discot$agg_df$X_from, c(0, smpls))
expect_equal(discot$agg_df$X_to, c(smpls, 1))
devtools::check()
devtools::load_all()
Ts <- 5
t0 <- 3
df <- ex_gmm(Ts=Ts)
disco <- DiSCo(df=df, id_col.target=1, t0=t0, seed=1)
?ex_gmm
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
rhub::check_for_cran()
?lqslincon
?lsqlincon
lqslincon
lsqlincon
pracma::lsqlincon
devtools::build()
?requireNamespace
rhub::check_for_cran()
devtools::document()
devtools::document()
rhub::check_for_cran()
devtools::document()
devtools::build()
devtools::build()
devtools::check()
rhub::check()
devtools::build()
options(datatable.auto.thread = 1)  # Limit data.table to 1 thread
Sys.setenv(OMP_NUM_THREADS = 1) # limit environment to 1 thread
devtools::build()
devtools::build()
devtools::test()
devtools::document()
devtools::build()
devtools::test()
knitr::opts_chunk$set(
comment = "#",
echo=TRUE,
error = FALSE,
tidy = FALSE,
cache = FALSE,
collapse = TRUE,
eval=FALSE, # dont rerun vignette when building package
out.width = '100%',
dpi = 144
)
library(pracma)
library(parallel)
library(stats)
library(maps)
library(data.table)
library(CVXR)
library(DiSCos)
library(ggplot2)
data("dube")
head(dube)
id_col.target <- 2
t0 <- 2003
df <- copy(dube)
disco <- DiSCo(df, id_col.target, t0, G = 1000, num.cores = 1, permutation = TRUE, CI = TRUE, boots = 1000, graph = TRUE, simplex=TRUE, seed=1)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
knitr::opts_chunk$set(
comment = "#",
echo=TRUE,
error = FALSE,
tidy = FALSE,
cache = FALSE,
collapse = TRUE,
eval=TRUE, # dont rerun vignette when building package
out.width = '100%',
dpi = 144
)
library(pracma)
library(parallel)
library(stats)
library(maps)
library(data.table)
library(CVXR)
library(DiSCos)
library(ggplot2)
data("dube")
head(dube)
id_col.target <- 2
t0 <- 2003
df <- copy(dube)
disco <- DiSCo(df, id_col.target, t0, G = 1000, num.cores = 1, permutation = TRUE, CI = TRUE, boots = 1000, graph = TRUE, simplex=TRUE, seed=1)
knitr::opts_chunk$set(
comment = "#",
echo=TRUE,
error = FALSE,
tidy = FALSE,
cache = FALSE,
collapse = TRUE,
eval=TRUE, # dont rerun vignette when building package
out.width = '100%',
dpi = 144
)
df <- copy(dube)
knitr::opts_chunk$set(
comment = "#",
echo=TRUE,
error = FALSE,
tidy = FALSE,
cache = FALSE,
collapse = TRUE,
eval=TRUE, # dont rerun vignette when building package
out.width = '100%',
dpi = 144
)
library(pracma)
library(parallel)
library(stats)
library(maps)
library(data.table)
library(CVXR)
library(DiSCos)
library(ggplot2)
data("dube")
head(dube)
id_col.target <- 2
t0 <- 2003
df <- copy(dube)
disco <- DiSCo(df, id_col.target, t0, G = 1000, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = TRUE, simplex=TRUE, seed=1)
summary(disco$perm)
discot <- DiSCoTEA(disco,  agg="quantileDiff", graph=TRUE)
summary(discot)
library(pracma)
library(parallel)
library(stats)
library(maps)
library(data.table)
library(CVXR)
library(DiSCos)
library(ggplot2)
devtools::load_all()
knitr::opts_chunk$set(
comment = "#",
echo=TRUE,
error = FALSE,
tidy = FALSE,
cache = FALSE,
collapse = TRUE,
eval=TRUE, # dont rerun vignette when building package
out.width = '100%',
dpi = 144
)
library(pracma)
library(parallel)
library(stats)
library(maps)
library(data.table)
library(CVXR)
library(DiSCos)
library(ggplot2)
devtools::load_all()
data("dube")
head(dube)
id_col.target <- 2
t0 <- 2003
df <- copy(dube)
disco <- DiSCo(df, id_col.target, t0, G = 1000, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = TRUE, simplex=TRUE, seed=1)
# retrieve the weights
weights <- disco$Weights_DiSCo_avg
# retrieve the control unit IDs
controls <- disco$control_ids
# store in a dataframe
weights_df <- data.frame(weights = weights, fips = controls)
# merge with state fips codes (built into the maps package)
state.fips <- as.data.table(maps::state.fips)
state.fips <- state.fips[!duplicated(state.fips$abb), c("fips", "abb")]
weights_df <- merge(weights_df, state.fips, by = "fips")
setorder(weights_df, -weights)
print(weights_df[1:10,])
summary(disco$perm)
discot <- DiSCoTEA(disco,  agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco,  agg="cdfDiff", graph=TRUE)
summary(discot)
?discoTEA
discot <- DiSCoTEA(disco,  agg="cdfDiff", graph=TRUE, ylim=c(-0.05, 0.05))
summary(discot)
library(pracma)
library(parallel)
library(stats)
library(maps)
library(data.table)
library(CVXR)
library(DiSCos)
library(ggplot2)
devtools::load_all()
discot <- DiSCoTEA(disco,  agg="cdfDiff", graph=TRUE, ylim=c(-0.05, 0.05))
summary(discot)
ecdf(disco$results.periods$`2000`$target$quantiles)(0.5)
ecdf(disco$results.periods$`2000`$target$quantiles)(10)
ecdf(disco$results.periods$`2000`$target$quantiles)(5)
disco <- DiSCo(dube, id_col.target=id_col.target, t0=t0, G = 250, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = FALSE, q_min = 0, q_max=0.95, seed=1, simplex=TRUE)
disco <- DiSCo(dube, id_col.target=id_col.target, t0=t0, G = 250, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = FALSE, q_min = 0, q_max=0.95, seed=1, simplex=TRUE)
discot <- DiSCoTEA(disco, agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE, ylim=c(-0.5,0.5))
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE, ylim=c(-0.05,0.05))
summary(discot)
disco <- DiSCo(dube, id_col.target=id_col.target, t0=t0, G = 250, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = FALSE, q_min = 0, q_max=0.5, seed=1, simplex=TRUE)
discot <- DiSCoTEA(disco, agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE, ylim=c(-0.05,0.05))
summary(discot)
disco <- DiSCo(dube, id_col.target=id_col.target, t0=t0, G = 1000, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = FALSE, q_min = 0, q_max=0.5, seed=1, simplex=FALSE)
discot <- DiSCoTEA(disco, agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE, ylim=c(-0.05,0.05))
summary(discot)
discot <- DiSCoTEA(disco, agg="quantileDiff", graph=TRUE)
summary(discot)
disco <- DiSCo(dube, id_col.target=id_col.target, t0=t0, G = 100, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = FALSE, q_min = 0, q_max=0.5, seed=1, simplex=FALSE)
discot <- DiSCoTEA(disco, agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE, ylim=c(-0.05,0.05))
summary(discot)
disco <- DiSCo(dube, id_col.target=id_col.target, t0=t0, G = 100, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = FALSE, q_min = 0, q_max=0.5, seed=1, simplex=TRUE)
discot <- DiSCoTEA(disco, agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE, ylim=c(-0.05,0.05))
summary(discot)
# retrieve the weights
weights <- disco$Weights_DiSCo_avg
# retrieve the control unit IDs
controls <- disco$control_ids
# store in a dataframe
weights_df <- data.frame(weights = weights, fips = controls)
# merge with state fips codes (built into the maps package)
state.fips <- as.data.table(maps::state.fips)
state.fips <- state.fips[!duplicated(state.fips$abb), c("fips", "abb")]
weights_df <- merge(weights_df, state.fips, by = "fips")
setorder(weights_df, -weights)
print(weights_df[1:10,])
df <- copy(dube)
disco <- DiSCo(df, id_col.target, t0, G = 1000, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = TRUE, simplex=TRUE, seed=1, q_max=0.95)
# retrieve the weights
weights <- disco$Weights_DiSCo_avg
# retrieve the control unit IDs
controls <- disco$control_ids
# store in a dataframe
weights_df <- data.frame(weights = weights, fips = controls)
# merge with state fips codes (built into the maps package)
state.fips <- as.data.table(maps::state.fips)
state.fips <- state.fips[!duplicated(state.fips$abb), c("fips", "abb")]
weights_df <- merge(weights_df, state.fips, by = "fips")
setorder(weights_df, -weights)
print(weights_df[1:10,])
summary(disco$perm)
discot <- DiSCoTEA(disco,  agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco,  agg="cdfDiff", graph=TRUE, ylim=c(-0.05, 0.05))
summary(discot)
dube
summary(dube$time_col)
ecdf(disco$results.periods$`2000`$target$quantiles)(3.5)
ecdf(disco$results.periods$`2000`$target$quantiles)(5)
ecdf(disco$results.periods$`2000`$target$quantiles)(6)
df <- copy(dube)
disco <- DiSCo(df, id_col.target, t0, G = 1000, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = TRUE, simplex=TRUE, seed=1, q_max=0.9)
# retrieve the weights
weights <- disco$Weights_DiSCo_avg
# retrieve the control unit IDs
controls <- disco$control_ids
# store in a dataframe
weights_df <- data.frame(weights = weights, fips = controls)
# merge with state fips codes (built into the maps package)
state.fips <- as.data.table(maps::state.fips)
state.fips <- state.fips[!duplicated(state.fips$abb), c("fips", "abb")]
weights_df <- merge(weights_df, state.fips, by = "fips")
setorder(weights_df, -weights)
print(weights_df[1:10,])
summary(disco$perm)
discot <- DiSCoTEA(disco,  agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco,  agg="cdfDiff", graph=TRUE, ylim=c(-0.05, 0.05))
summary(discot)
df <- copy(dube)
disco <- DiSCo(df, id_col.target, t0, G = 100, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = TRUE, simplex=TRUE, seed=1, q_max=0.9)
# retrieve the weights
weights <- disco$Weights_DiSCo_avg
# retrieve the control unit IDs
controls <- disco$control_ids
# store in a dataframe
weights_df <- data.frame(weights = weights, fips = controls)
# merge with state fips codes (built into the maps package)
state.fips <- as.data.table(maps::state.fips)
state.fips <- state.fips[!duplicated(state.fips$abb), c("fips", "abb")]
weights_df <- merge(weights_df, state.fips, by = "fips")
setorder(weights_df, -weights)
print(weights_df[1:10,])
summary(disco$perm)
discot <- DiSCoTEA(disco,  agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco,  agg="cdfDiff", graph=TRUE, ylim=c(-0.05, 0.05))
summary(discot)
ecdf(disco$results.periods$`2000`$target$quantiles)(3.5)
disco <- DiSCo(dube, id_col.target=id_col.target, t0=t0, G = 1000, num.cores = 5, permutation = TRUE, CI = TRUE, boots = 1000, graph = FALSE, q_min = 0, q_max=0.65, seed=1, simplex=TRUE)
discot <- DiSCoTEA(disco, agg="quantileDiff", graph=TRUE)
summary(discot)
discot <- DiSCoTEA(disco, agg="cdfDiff", graph=TRUE, ylim=c(-0.05,0.05))
summary(discot)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::test()
?rhub
devtools::build()
rhub::check_for_cran()
rhub::check_for_cran()
rhub::check_for_cran()
devtools::build()
rhub::check_for_cran()
devtools::document()
rhub::check_for_cran()
devtools::build()
uninstall.packages("disco")
remove.packages("DiSCos")
install.packages("DiSCos")
install.packages("DiSCos")
